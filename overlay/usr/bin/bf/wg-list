#!/usr/bin/nu

use bf
use bf-wireguard peers
bf env load -x

# Show list of peers - inspired by https://raw.githubusercontent.com/pivpn/pivpn/master/scripts/wireguard/clientSTAT.sh
def main [] {
    # if there are no peers in the list, exit
    let peers_list = peers list
    if ($peers_list | length) == 0 { bf write notok "There are no clients to list." ; exit 0 }

    # get list of current clients from wg tools
    let clients_list = { ^wg show (bf env WIREGUARD_INTERFACE) dump } | bf handle -i | lines
    if ($clients_list | length) == 0 { bf write error "Unable to get the list of clients." }

    # convert each line into a record
    # skip the first one which is the server instance, not a client
    $clients_list | skip 1 | each {|x|
        # split by spaces
        let col = $x | split row -r '\s+'

        # read values as variables
        let public_key = $col.0
        let remote_ip = $col.2
        let virtual_ip = $col.3
        let last_seen = $col.4 | into datetime
        let bytes_received = $col.5 | into filesize
        let bytes_sent = $col.6 | into filesize
        let name = $peers_list | where public_key == $public_key | first | get name

        # return as a record
        {name: $name, remote_ip: $remote_ip, virtual_ip: $virtual_ip, bytes_received: $bytes_received, bytes_sent: $bytes_sent, last_seen: $last_seen}
    }
}
