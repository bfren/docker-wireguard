#!/command/with-contenv bash

set -euo pipefail
export BF_E=`basename ${0}`


#======================================================================================================================
# Modified from https://raw.githubusercontent.com/pivpn/pivpn/master/scripts/wireguard/clientSTAT.sh.
# MIT License.
#======================================================================================================================

hr() { numfmt --to=iec-i --suffix=B "${1}" ; }

# if there are no clients listed, output an error
if [ ! -s "${WIREGUARD_PEERS_LIST}" ] ; then
    bf-notok "There are no clients to list."
    exit 0
fi

# get list of current clients from wg
if DUMP="$(wg show ${WIREGUARD_INTERFACE} dump)"; then
    DUMP="$(tail -n +2 <<< "${DUMP}")"
else
    exit 1
fi

printf "\e[1mConnected Clients\e[0m\n"

{
    # print headings
    printf "\e[4mName\e[0m  \t  \e[4mRemote IP\e[0m  \t  \e[4mVirtual IP\e[0m"
    printf "\t  \e[4mBytes Received\e[0m  \t  \e[4mBytes Sent\e[0m  "
    printf "\t  \e[4mLast Seen\e[0m\n"

    while IFS= read -r LINE; do
    if [ -n "${LINE}" ] ; then
        PUBLIC_KEY="$(awk '{ print $1 }' <<< "${LINE}")"
        REMOTE_IP="$(awk '{ print $3 }' <<< "${LINE}")"
        VIRTUAL_IP="$(awk '{ print $4 }' <<< "${LINE}")"
        BYTES_RECEIVED="$(awk '{ print $6 }' <<< "${LINE}")"
        BYTES_SENT="$(awk '{ print $7 }' <<< "${LINE}")"
        LAST_SEEN="$(awk '{ print $5 }' <<< "${LINE}")"
        CLIENT_NAME="$(grep "${PUBLIC_KEY}" "${WIREGUARD_PEERS_LIST}" \
            | awk '{ print $1 }')"
        printf "%s  \t  %s  \t  %s  \t  " \
            "${CLIENT_NAME}" \
            "${REMOTE_IP}" \
            "${VIRTUAL_IP/\/32/}"

        printf "%s  \t  %s  \t  " \
            "$(hr "${BYTES_RECEIVED}")" \
            "$(hr "${BYTES_SENT}")"

        if [[ "${LAST_SEEN}" -ne 0 ]]; then
            printf "%s" "$(date -d @"${LAST_SEEN}" '+%b %d %Y - %T')"
        else
            printf "(not yet)"
        fi

        printf "\n"
    fi
    done <<< "${DUMP}"

    printf "\n"
} | column -ts $'\t'
