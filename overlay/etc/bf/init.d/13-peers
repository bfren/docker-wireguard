#!/command/with-contenv bash

set -euo pipefail
export BF_E=`basename ${0}`


#======================================================================================================================
# Generate WireGuard peers keys and configuration.
#======================================================================================================================

mkdir -p ${WIREGUARD_PEERS_D}
bf-echo "Generating peer keys and configuration..."
for I in "${!WIREGUARD_PEERS[@]}" ; do

    # get values as variables
    export PEER_NUM=$((${I}+2))
    export PEER_NAME=${PEERS[${I}]}
    bf-echo " .. ${PEER_NAME}"

    # ensure peer directory exists
    PEER_D=${WIREGUARD_PEERS_D}/${PEER_NAME}
    mkdir ${PEER_D} && cd ${PEER_D}

    # if the public and private keys do not exist, create them
    if [ ! -f "${WIREGUARD_PEER_PRIVATEKEY_FILE}" ] || [ ! -f "${WIREGUARD_PEER_PUBLICKEY_FILE}" ] ; then
        bf-debug "    public and private keys"
        wg genkey \
            | tee "${WIREGUARD_PEER_PRIVATEKEY_FILE}" \
            | wg pubkey > "${WIREGUARD_PEER_PUBLICKEY_FILE}"
    fi

    # if the preshared key does not exist, create it
    if [ ! -f "${WIREGUARD_PEER_PRESHAREDKEY_FILE}" ] ; then
        bf-debug "    preshared key"
        wg genpsk | tee "${WIREGUARD_PEER_PRESHAREDKEY_FILE}" &> /dev/null
    fi

    # always generate config in case IP range / DNS has changed
    bf-esh \
        ${BF_TEMPLATES}\peer-config.conf.esh \
        ${PEER_D}\config

done
